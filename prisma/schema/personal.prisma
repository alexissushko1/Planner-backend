// Personal Passwords Table - Stores passwords for personal accounts
model PersonalPassword {
  id Int @id @default (autoincrement())
  userId Int 
  accountName String // Account name (e.g., "Bank", "Email")
  username String // Username for the account
  password String // Encrypted password

  user User @relation(fields: [userId], references: [id])
}

// Grocery List Table
model GroceryList {
  id Int @id @default (autoincrement())
  userId Int 
  itemName String
  quantity Int
  isPurchased Boolean // Whether the item has been purchased or not
  
  user User @relation(fields: [userId], references: [id])
}

// Meals for the Week Table
model MealsForWeek {
  id Int @id @default (autoincrement())
  userId Int 
  dayOfWeek String // E.g., "Monday", "Tuesday"
  mealDescription String // Description of the meal

  user User @relation(fields: [userId], references: [id])
}

// Monthly Budget Table
model MonthlyBudget {
  id Int @id @default (autoincrement())
  userId Int
  category String // E.g., "Groceries", "Rent", etc.
  amount Int
  isExpense Boolean // Whether this is an expense (true) or income (false)

  user User @relation(fields: [userId], references: [id])
}

// Spend Tracker Table
model SpendTracker {
  id Int @id @default (autoincrement())
  userId Int 
  description String // Description of the transaction
  amount Int

  user User @relation(fields: [userId], references: [id])
}

// Medical Table
model PersonalMedical {
  id Int @id @default (autoincrement())
  userId Int 
  medicalCondition String // E.g., "Asthma", "Diabetes"
  prescription String // Prescription details
  doctorName String // Doctorâ€™s name

  user User @relation(fields: [userId], references: [id])
}

// Habit Tracker Table
model HabitTracker {
  id Int @id @default (autoincrement())
  userId Int 
  habitName String // Name of the habit (e.g., "Exercise", "Read")
  frequency String // E.g., "Daily", "Weekly"
  goal Int // Number of times to do the habit
  progress Int // Progress made

  user User @relation(fields: [userId], references: [id])
}

// Cleaning Checklist Table (Personal)
model CleaningChecklist {
  id Int @id @default (autoincrement())
  userId Int
  taskName String // Task description (e.g., "Vacuum", "Dusting")
  isCompleted Boolean // Whether the task is completed

  user User @relation(fields: [userId], references: [id])
}