@host = http://localhost:3000

### Register new user
POST {{host}}/register
Content-Type: application/json

{
  "username": "newuser8",
  "email": "user8@email.com",
  "password": "password"
}

### Login user
# @name login
POST {{host}}/login
Content-Type: application/json

{
  "username": "newuser8",
  "email": "user8@email.com",
  "password": "password"
}

### Get user information
@token = {{login.response.body.token}}
GET {{host}}/user
Authorization: Bearer {{token}}
Content-Type: application/json

### Update Profile
PATCH {{host}}/update-profile
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "newuser7",
  "email": "user7@email.com",
  "password": "changedPassword"
}

### Get all stickers
GET {{host}}/api/stickers/sticker
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a new sticker
POST {{host}}/api/stickers/sticker
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "content": "Type your new note here...",
  "positionX": 300,
  "positionY": 300,
  "width": 300,
  "height": 300,
  "color": "Y#FFEB3B",
  "zIndex": 585
}

### Update a sticker
PATCH {{host}}/api/stickers/sticker/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "content": "Changed note here...",
  "positionX": 300,
  "positionY": 300,
  "width": 300,
  "height": 300,
  "color": "Y#FFEB3B",
  "zIndex": 585
}

### Delete a sticker
DELETE {{host}}/api/stickers/sticker/596
Authorization: Bearer {{token}}

### Get all stickers settings
GET {{host}}/api/stickers/sticker-settings
Authorization: Bearer {{token}}
Content-Type: application/json

### Post sticker preference
POST {{host}}/api/stickers/sticker-settings
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "defaultColor": "blue",
  "defaultSizeWidth": 100,
  "defaultSizeHeight": 100
}

### Update a sticker
PATCH {{host}}/api/stickers/sticker-settings/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "defaultColor": "purple",
  "defaultSizeWidth": 150,
  "defaultSizeHeight": 150
}

### Delete a sticker setting
DELETE {{host}}/api/stickers/sticker-settings/15
Authorization: Bearer {{token}}

### Get all events on calendar
GET {{host}}/api/events/event
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a new event
POST {{host}}/api/events/event
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "eventName": "Christmas Concert",
  "eventDate": "2024-12-05T17:00:00Z",
  "description": "School Christmas Concert"
}

### Update a event
PATCH {{host}}/api/events/event/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "eventName": "2nd Grade Christmas Concert",
  "eventDate" : "2024-12-06T17:00:00Z",
  "description": "Changed date of Christmas concert"
}

### Delete a event
DELETE {{host}}/api/events/event/6
Authorization: Bearer {{token}}

### Get all to do lists
GET {{host}}/api/lists/todo
Authorization: Bearer {{token}}
Content-Type: application/json

### Post to do 
POST {{host}}/api/lists/todo
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "taskName": "Clean car",
  "isCompleted": false
}

### Update a to do
PATCH {{host}}/api/lists/todo/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId:": 1,
  "taskName": "Clean and wash car",
  "isCompleted": false
}

### Delete a to do
DELETE {{host}}/api/lists/todo/11
Authorization: Bearer {{token}}

### Get all shopping lists
GET {{host}}/api/lists/shopping
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a shopping list
POST {{host}}/api/lists/shopping
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 5,
  "itemName": "Pink Coat",
  "quantity": 1,
  "store": "Target",
  "price": 25.75
}

### Update a shopping list
PATCH {{host}}/api/lists/shopping/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 5,
  "itemName": "Green Coat",
  "quantity": 1,
  "store": "Target",
  "price": 27.75
}

### Delete a shopping list
DELETE {{host}}/api/lists/shopping/17
Authorization: Bearer {{token}}

### Get all journals
GET {{host}}/api/journals/journal
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a journal entry
POST {{host}}/api/journals/journal
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 5,
  "entryText": "Saw a cute cat."
}

### Update a journal entry 
PATCH {{host}}/api/journals/journal/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId:": 5,
  "entryText": "Saw 2 cute cats."
}

### Delete a journal entry
DELETE {{host}}/api/journals/journal/12
Authorization: Bearer {{token}}

### Get all personal passwords
GET {{host}}/api/personalPasswords/password
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a personal password
POST {{host}}/api/personalPasswords/password
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 7,
  "accountName": "Example account",
  "username": "ExampleUsername",
  "password": "ExamplePassword"
}

### Update a personal password
PATCH {{host}}/api/personalPasswords/password/14
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 6,
  "accountName": "Example changed account",
  "username": "ExampleChangedUsername",
  "password": "ExampleChangedPassword"
}

### Delete a personal password
DELETE {{host}}/api/personalPasswords/password/13
Authorization: Bearer {{token}}

### Get all grocery lists
GET {{host}}/api/food/grocery
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a grocery list
POST {{host}}/api/food/grocery
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 5,
  "itemName": "Almond Milk",
  "quantity": 2,
  "isPurchased": false
}

### Update a grocery listt
PATCH {{host}}/api/food/grocery/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 5,
  "itemName": "Oat Milk",
  "quantity": 2,
  "isPurchased": false
}

### Delete a grocery list
DELETE {{host}}/api/food/grocery/7
Authorization: Bearer {{token}}

### Get all meals for week
GET {{host}}/api/food/weekly-meals
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a meal
POST {{host}}/api/food/weekly-meals
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "dayOfWeek": "Monday",
  "mealDescription": "Breakfast: Granola, Lunch: Salad, Dinner: Sweet Potato Tacos"
}

### Update a meal
PATCH {{host}}/api/food/weekly-meals/1
Authorization: Bearer {{token}}
Content-Type: application/json

 {
  "userId": 3,
  "dayOfWeek": "Tuesday",
  "mealDescription": "Breakfast: Oatmeal, Lunch: Salad, Dinner: Sweet Potato Tacos"
}

### Delete a meal
DELETE {{host}}/api/food/weekly-meals/16
Authorization: Bearer {{token}}

### Get all budget entries
GET {{host}}/api/personalFinances/budget
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a budget entry
POST {{host}}/api/personalFinances/budget
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 5,
  "category": "Groceries",
  "amount": 250.75,
  "isExpense": true
}

### Update a budget entry
PATCH {{host}}/api/personalFinances/budget/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "category": "Groceries-Snacks",
  "amount": 20.75,
  "isExpense": true
}

### Delete a budget entry
DELETE {{host}}/api/personalFinances/budget/6
Authorization: Bearer {{token}}

### Get all spending entries
GET {{host}}/api/personalFinances/personal-spending
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a spending entry
POST {{host}}/api/personalFinances/personal-spending
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "description": "Vacation",
  "amount": 400
}

### Update a spending entry
PATCH {{host}}/api/personalFinances/personal-spending/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "description": "Family Visit",
  "amount": 200
}

### Delete a spending entry
DELETE {{host}}/api/personalFinances/personal-spending/7
Authorization: Bearer {{token}}

### Get all medical data
GET {{host}}/api/medical/medical
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a medical entry
POST {{host}}/api/medical/medical
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "medicalCondition": "Asthma",
  "prescription": "Azelaic acid",
  "doctorName": "Dr.Matthews"
}

### Update a medical entry
PATCH {{host}}/api/medical/medical/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "medicalCondition": "Rosacea",
  "prescription": "Eucerin lotion",
  "doctorName": "Dr.Matthews"
}

### Delete a medical entry
DELETE {{host}}/api/medical/medical/6
Authorization: Bearer {{token}}

### Get all habit tracker data
GET {{host}}/api/habits/habit
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a habit tracker entry
POST {{host}}/api/habits/habit
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "habitName": "Skincare",
  "frequency": "daily",
  "goal": 2,
  "progress": 3
}

### Update a habit tracker entry
PATCH {{host}}/api/habits/habit/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "habitName": "Haircare",
  "frequency": "daily",
  "goal": 1,
  "progress": 3
}

### Delete a habit tracker entry
DELETE {{host}}/api/habits/habit/6
Authorization: Bearer {{token}}

### Get all cleaning data
GET {{host}}/api/habits/cleaning
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a cleaning entry
POST {{host}}/api/habits/cleaning
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "taskName": "Vacuum",
  "frequency": "daily",
  "isCompleted": false
}

### Update a cleaning entry
PATCH {{host}}/api/habits/cleaning/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 3,
  "taskName": "Dust",
  "frequency": "daily",
  "isCompleted": false
}

### Delete a cleaning entry
DELETE {{host}}/api/habits/cleaning/10
Authorization: Bearer {{token}}

### Get all sub plans
GET {{host}}/api/plans/sub-plan
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a new subplan
POST {{host}}/api/plans/sub-plan
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "subject": "3rd Grade Math",
  "planDescription": "For 3rd-grade math lesson, students will begin with a 10-minute warm-up on multi-digit addition and subtraction (e.g., 23 + 56, 78 - 34). Following the warm-up, the class will review multi-digit addition and subtraction with regrouping, solving problems like 74 + 56 and 92 - 47 together. Next, they’ll explore basic geometry by identifying and drawing shapes such as triangles, rectangles, and circles, while noting properties like the number of sides and angles. Then, students will be introduced to multiplication as repeated addition (e.g., 3 × 4 as 4 + 4 + 4) and practice a few problems (e.g., 2 × 5, 4 × 3). If time allows, students will play a math game like Math Bingo or “Roll and Add” to reinforce their skills in a fun way. At the end of the lesson, students will share one thing they learned, and the teacher will collect their math notebooks and handouts. Behavior expectations include raising hands for questions and staying on task during independent work. If needed, the teacher can provide additional support for students struggling with concepts. Optional homework includes a worksheet with mixed addition, subtraction, and multiplication problems.",
  "date": "2024-12-05T17:00:00Z"
}

### Update a subplan
PATCH {{host}}/api/plans/sub-plan/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "subject": "4th Grade Math",
  "planDescription": "For 4th-grade math lesson, students will begin with a 10-minute warm-up on multi-digit addition and subtraction (e.g., 23 + 56, 78 - 34). Following the warm-up, the class will review multi-digit addition and subtraction with regrouping, solving problems like 74 + 56 and 92 - 47 together. Next, they’ll explore basic geometry by identifying and drawing shapes such as triangles, rectangles, and circles, while noting properties like the number of sides and angles. Then, students will be introduced to multiplication as repeated addition (e.g., 3 × 4 as 4 + 4 + 4) and practice a few problems (e.g., 2 × 5, 4 × 3). If time allows, students will play a math game like Math Bingo or “Roll and Add” to reinforce their skills in a fun way. At the end of the lesson, students will share one thing they learned, and the teacher will collect their math notebooks and handouts. Behavior expectations include raising hands for questions and staying on task during independent work. If needed, the teacher can provide additional support for students struggling with concepts. Optional homework includes a worksheet with mixed addition, subtraction, and multiplication problems.",
  "date": "2024-12-05T17:00:00Z"
}

### Delete a subplan
DELETE {{host}}/api/plans/sub-plan/4
Authorization: Bearer {{token}}

### Get all weekly lesson plans
GET {{host}}/api/plans/weekly-plan
Authorization: Bearer {{token}}
Content-Type: application/json

### Post weekly lesson plan
POST {{host}}/api/plans/weekly-plan
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 2,
  "subject": "Algebra",
  "lessonDescription":"This Algebra lesson plan will introduce students to foundational algebraic concepts through a series of structured activities and practice. On Day 1, the focus will be on introducing the new topic of solving linear equations. The teacher will begin by reviewing basic arithmetic operations and properties, then demonstrate step-by-step how to solve one-variable linear equations. After the demonstration, students will engage in guided practice, where they will solve a few problems as a class. Homework will be assigned to reinforce the day's lesson, providing students with problems that gradually increase in difficulty. On Day 2, the lesson will build upon the previous day’s work by exploring multi-step linear equations. The teacher will review the homework, address common mistakes, and then present more complex examples, allowing students to work through problems individually and in pairs. During independent practice, the teacher will circulate the room to provide support as needed. Homework for the night will consist of problems that challenge students to apply multi-step solving techniques. On Day 3, the lesson will shift to applying linear equations to real-world problems, such as budgeting or distance-time scenarios. After reviewing a few examples, students will work in groups to solve similar word problems, learning how to translate everyday situations into algebraic expressions. On Day 4, the class will focus on reinforcing all of the concepts learned throughout the week. This will include a review session with practice problems, a class discussion on any lingering questions, and a brief formative quiz to assess understanding. The week will conclude with Day 5, which will include time for individual or small group work on any difficult concepts, targeted interventions, and an opportunity for students to ask questions and clarify any misunderstandings before the next topic is introduced. Homework over the weekend will be assigned to further reinforce the week's content, ensuring that students have ample practice before moving forward.",
  "weekStartDate": "2025-10-05T17:00:00Z",
  "weekEndDate": "2025-10-09T17:00:00Z"
  }

### Update weekly lesson plan
PATCH {{host}}/api/plans/weekly-plan/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 2,
  "subject": "Algebra",
  "lessonDescription":"This Algebra lesson plan will have students review foundational algebraic concepts through a series of structured activities and practice. On Day 1, the focus will be on introducing the new topic of solving linear equations. The teacher will begin by reviewing basic arithmetic operations and properties, then demonstrate step-by-step how to solve one-variable linear equations. After the demonstration, students will engage in guided practice, where they will solve a few problems as a class. Homework will be assigned to reinforce the day's lesson, providing students with problems that gradually increase in difficulty. On Day 2, the lesson will build upon the previous day’s work by exploring multi-step linear equations. The teacher will review the homework, address common mistakes, and then present more complex examples, allowing students to work through problems individually and in pairs. During independent practice, the teacher will circulate the room to provide support as needed. Homework for the night will consist of problems that challenge students to apply multi-step solving techniques. On Day 3, the lesson will shift to applying linear equations to real-world problems, such as budgeting or distance-time scenarios. After reviewing a few examples, students will work in groups to solve similar word problems, learning how to translate everyday situations into algebraic expressions. On Day 4, the class will focus on reinforcing all of the concepts learned throughout the week. This will include a review session with practice problems, a class discussion on any lingering questions, and a brief formative quiz to assess understanding. The week will conclude with Day 5, which will include time for individual or small group work on any difficult concepts, targeted interventions, and an opportunity for students to ask questions and clarify any misunderstandings before the next topic is introduced. Homework over the weekend will be assigned to further reinforce the week's content, ensuring that students have ample practice before moving forward.",
  "weekStartDate": "2025-10-06T17:00:00Z",
  "weekEndDate": "2025-10-09T17:00:00Z"
  }

### Delete weekly lesson plan
DELETE {{host}}/api/plans/weekly-plan/5
Authorization: Bearer {{token}}

### Get all daily lesson plans
GET {{host}}/api/plans/daily-plan
Authorization: Bearer {{token}}
Content-Type: application/json

### Post daily lesson plan
POST {{host}}/api/plans/daily-plan
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 2,
  "subject": "Algebra",
  "lessonDescription":"This Algebra lesson plan will introduce students to foundational algebraic concepts through a series of structured activities and practice. On Day 1, the focus will be on introducing the new topic of solving linear equations. The teacher will begin by reviewing basic arithmetic operations and properties, then demonstrate step-by-step how to solve one-variable linear equations. After the demonstration, students will engage in guided practice, where they will solve a few problems as a class. Homework will be assigned to reinforce the day's lesson, providing students with problems that gradually increase in difficulty. On Day 2, the lesson will build upon the previous day’s work by exploring multi-step linear equations. The teacher will review the homework, address common mistakes, and then present more complex examples, allowing students to work through problems individually and in pairs. During independent practice, the teacher will circulate the room to provide support as needed. Homework for the night will consist of problems that challenge students to apply multi-step solving techniques. On Day 3, the lesson will shift to applying linear equations to real-world problems, such as budgeting or distance-time scenarios. After reviewing a few examples, students will work in groups to solve similar word problems, learning how to translate everyday situations into algebraic expressions. On Day 4, the class will focus on reinforcing all of the concepts learned throughout the week. This will include a review session with practice problems, a class discussion on any lingering questions, and a brief formative quiz to assess understanding. The week will conclude with Day 5, which will include time for individual or small group work on any difficult concepts, targeted interventions, and an opportunity for students to ask questions and clarify any misunderstandings before the next topic is introduced. Homework over the weekend will be assigned to further reinforce the week's content, ensuring that students have ample practice before moving forward.",
  "date": "2025-10-05T17:00:00Z"
  }

### Update daily lesson plan
PATCH {{host}}/api/plans/daily-plan/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 2,
  "subject": "Algebra",
  "lessonDescription":"This Algebra lesson plan will introduce students to foundational algebraic concepts through a series of structured activities and practice. On Day 1, the focus will be on introducing the new topic of solving linear equations. The teacher will begin by reviewing basic arithmetic operations and properties, then demonstrate step-by-step how to solve one-variable linear equations. After the demonstration, students will engage in guided practice, where they will solve a few problems as a class. Homework will be assigned to reinforce the day's lesson, providing students with problems that gradually increase in difficulty. On Day 2, the lesson will build upon the previous day’s work by exploring multi-step linear equations. The teacher will review the homework, address common mistakes, and then present more complex examples, allowing students to work through problems individually and in pairs. During independent practice, the teacher will circulate the room to provide support as needed. Homework for the night will consist of problems that challenge students to apply multi-step solving techniques. On Day 3, the lesson will shift to applying linear equations to real-world problems, such as budgeting or distance-time scenarios. After reviewing a few examples, students will work in groups to solve similar word problems, learning how to translate everyday situations into algebraic expressions. On Day 4, the class will focus on reinforcing all of the concepts learned throughout the week. This will include a review session with practice problems, a class discussion on any lingering questions, and a brief formative quiz to assess understanding. The week will conclude with Day 5, which will include time for individual or small group work on any difficult concepts, targeted interventions, and an opportunity for students to ask questions and clarify any misunderstandings before the next topic is introduced. Homework over the weekend will be assigned to further reinforce the week's content, ensuring that students have ample practice before moving forward.",
  "date": "2025-10-05T17:00:00Z"
  }

### Delete daily lesson plan
DELETE {{host}}/api/plans/daily-plan/12
Authorization: Bearer {{token}}

### Get all seating charts
GET {{host}}/api/seating/seating
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a new seating chart
POST {{host}}/api/seating/seating
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "seatingArrangement": "Row 1: Tim, Sally, Joe. Row 2: Bob, Dwayne, Ellie. Row 3: Constance, _ , Kevin."
}

### Update a seating chart
PATCH {{host}}/api/seating/seating/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "seatingArrangement": "Row 1: Jim, Sally, Joe. Row 2: Bob, Dwayne, Ellie. Row 3: Constance, _ , Kevin."
}

### Delete a seating chart
DELETE {{host}}/api/seating/seating/8
Authorization: Bearer {{token}}

### Get all class jobs
GET {{host}}/api/jobs/job
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a new class job
POST {{host}}/api/jobs/job
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "jobName": "Line Leader",
  "description": "Student E"
}

### Update a class job
PATCH {{host}}/api/jobs/job/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "jobName": "Line Leader",
  "description": "Student G"
}

### Delete a class job
DELETE {{host}}/api/jobs/job/5
Authorization: Bearer {{token}}

### Get all school passwords
GET {{host}}/api/schoolpasswords/school-password
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a new school password
POST {{host}}/api/schoolpasswords/school-password
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "accountName": "Canvas",
  "username": "teacher@email.com",
  "password": "password",
  "isTeacher": true
}

### Update a school password
PATCH {{host}}/api/schoolpasswords/school-password/7
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "accountName": "Canvas",
  "username": "student@email.com",
  "password": "password",
  "isTeacher": false
}

### Delete a school password
DELETE {{host}}/api/schoolpasswords/school-password/1
Authorization: Bearer {{token}}

### Get all rewards
GET {{host}}/api/rewards/reward
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a reward
POST {{host}}/api/rewards/reward
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "rewardName": "Sticker",
  "description": "Was kind to a classmate.",
  "pointsRequired": 2
}

### Update a reward
PATCH {{host}}/api/rewards/reward/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "rewardName": "Flower Sticker",
  "description": "Was kind to a classmate.",
  "pointsRequired": 2
}

### Delete a reward
DELETE {{host}}/api/rewards/reward/5
Authorization: Bearer {{token}}

### Get all iep data
GET {{host}}/api/iep/iep
Authorization: Bearer {{token}}
Content-Type: application/json

### Post data
POST {{host}}/api/iep/iep
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentId": 5,
  "iepDetails": "Student A is a 9 year old student in the 3rd grade with a diagnosis of ADHD and specific learning disabilities in reading and written expression. Her Individualized Education Program (IEP) focuses on providing accommodations and specialized instruction to help her succeed in the general education curriculum. In terms of academic goals, Sarah will receive 30 minutes of daily, small-group instruction in reading to improve fluency and comprehension, with a target of increasing her reading level by one grade year within the next year. In written expression, she will work with a special education teacher for 45 minutes per week to develop her ability to organize and clearly express her ideas in writing, with an aim to increase her writing output from two sentences to a coherent paragraph by the end of the school year. Accommodations include extended time for tests and assignments, the use of a text-to-speech program for reading assignments, and a scribe to assist with writing when needed. To support her focus and attention, Sarah will be allowed frequent breaks during lessons and will use fidget tools during independent work times. Social-emotional goals focus on improving self-regulation and coping skills, with weekly sessions with the school counselor to practice mindfulness and strategies for managing frustration. Regular communication between the special education team and Sarah’s parents will ensure that progress is monitored and adjustments are made as necessary to support her academic and emotional development."
}

### Update data
PATCH {{host}}/api/iep/iep/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentId": 6,
  "iepDetails": "Student B is a 9 year old student in the 3rd grade with a diagnosis of ADHD and specific learning disabilities in reading and written expression. Her Individualized Education Program (IEP) focuses on providing accommodations and specialized instruction to help her succeed in the general education curriculum. In terms of academic goals, Sarah will receive 30 minutes of daily, small-group instruction in reading to improve fluency and comprehension, with a target of increasing her reading level by one grade year within the next year. In written expression, she will work with a special education teacher for 45 minutes per week to develop her ability to organize and clearly express her ideas in writing, with an aim to increase her writing output from two sentences to a coherent paragraph by the end of the school year. Accommodations include extended time for tests and assignments, the use of a text-to-speech program for reading assignments, and a scribe to assist with writing when needed. To support her focus and attention, Sarah will be allowed frequent breaks during lessons and will use fidget tools during independent work times. Social-emotional goals focus on improving self-regulation and coping skills, with weekly sessions with the school counselor to practice mindfulness and strategies for managing frustration. Regular communication between the special education team and Sarah’s parents will ensure that progress is monitored and adjustments are made as necessary to support her academic and emotional development."
}

### Delete data
DELETE {{host}}/api/iep/iep/6
Authorization: Bearer {{token}}

### Get all grading data
GET {{host}}/api/grades/grade
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a grade
POST {{host}}/api/grades/grade
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentId": 5,
  "subject": "Beginner Chorus",
  "grade": 98
  }

### Update a grade
PATCH {{host}}/api/grades/grade/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentId": 5,
  "subject": "Beginner Chorus",
  "grade": 95
  }

### Delete a grade
DELETE {{host}}/api/grades/grade/6
Authorization: Bearer {{token}}

### Get all student transportation details
GET {{host}}/api/transportation/transportation
Authorization: Bearer {{token}}
Content-Type: application/json

### Post a transportation details
POST {{host}}/api/transportation/transportation
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentId": 5,
  "transportationDetails": "Pick up early."
  }

### Update a transportation detail
PATCH {{host}}/api/transportation/transportation/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentId": 5,
  "transportationDetails": "Pick up early."
  }

### Delete a transportation detail
DELETE {{host}}/api/transportation/transportation/5
Authorization: Bearer {{token}}

### Get all class roster details
GET {{host}}/api/rosters/roster
Authorization: Bearer {{token}}
Content-Type: application/json

### Post class roster information
POST {{host}}/api/rosters/roster
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentName": "Student A",
  "gradeLevel": "11",
  "birthday": "2025-12-05T17:00:00Z"
  }

### Update class roster information
PATCH {{host}}/api/rosters/roster/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userId": 1,
  "studentName": "Student A",
  "gradeLevel": "11",
  "birthday": "2025-12-05T17:00:00Z"
  }

### Delete class roster information
DELETE {{host}}/api/rosters/roster/5
Authorization: Bearer {{token}}
